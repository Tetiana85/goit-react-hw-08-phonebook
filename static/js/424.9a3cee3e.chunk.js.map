{"version":3,"file":"static/js/424.9a3cee3e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","pages/Contacts/Contacts.styled.jsx","components/ContactForm.jsx/ContactForm.styled.jsx","components/ContactForm.jsx/ContactForm.jsx","components/Error/Error.styled.jsx","components/Error/Error.jsx","components/Filter.jsx/Filter.styled.jsx","components/Filter.jsx/Filter.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["export const getFilter = state => state.filter.filter;\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 36px;\n  margin: 0 auto;\n  color: #155e75;\n\n  @media screen and (min-width: 1024px) {\n    padding: 70px;\n    display: grid;\n    column-gap: 40px;\n    grid-template-columns: 1fr 2fr;\n    grid-auto-rows: minmax(100px, auto);\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n\nexport const Title = styled.h2`\n  margin-top: 60px;\n  font-weight: 900;\n  text-align: center;\n  font-size: 40px;\n`;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  align-items: center;\n  gap: 12px;\n  @media screen and (max-width: 375px and min-width: 425px) {\n    min-width: 300px;\n  }\n  @media screen and (max-width: 768px) {\n    max-width: 500px;\n  }\n  @media screen and (max-width: 1024px) {\n    max-width: 600px;\n  }\n  @media screen and (min-width: 1024px) {\n    margin: 0;\n    grid-column-start: 1;\n    grid-column-end: 2;\n    grid-row-start: 2;\n    grid-row-end: 4;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 4px;\n  font-size: 18px;\n  font-weight: 500;\n  line-height: 1.14;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 12px;\n  font-size: 18px;\n  line-height: 1.12;\n  font-style: italic;\n  font-weight: 300;\n  border: 2px solid #ef972c;\n  border-radius: 8px;\n  background-color: #e6f4f1;\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  min-width: 150px;\n  margin-top: 24px;\n  color: #155e75;\n  padding: 8px 10px;\n  border: 2px solid #b69905;\n  border-radius: 8px;\n  background-color: #ef972c;\n  font-size: 18px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: transform 300ms linear, background-image 300ms linear 300ms,\n    border-color 300ms linear 300ms;\n  background-size: 200% auto;\n  background-image: linear-gradient(\n    45deg,\n    #f9f871 0%,\n    #ef972c 51%,\n    #f9f871 100%\n  );\n  :hover,\n  :focus {\n    background-position: right center;\n    transform: scale(1.1);\n    border-color: #f9f871;\n  }\n  :active {\n    transform: scale(0.95);\n  }\n`;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/contactsThunks';\nimport { getContacts } from '../../redux/contacts/selectors';\n\nconst ContactForm = () => {\n  const [userName, setUserName] = useState('');\n  const [userNumber, setUserNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const handleInputChange = ({ target: { name, value } }) => {\n    const normalizedValue = value.toLowerCase();\n    if (name === 'userNumber')\n      if (contacts.some(contact => contact.number === value))\n        toast.error(`Number ${value} is also in contacts`, {\n          position: 'top-left',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'colored',\n        });\n      else setUserNumber(value);\n    if (name === 'userName')\n      if (\n        contacts.some(contact => contact.name.toLowerCase() === normalizedValue)\n      )\n        toast.error(`${value} also in your list`, {\n          position: 'top-left',\n          autoClose: 2000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'colored',\n        });\n      else setUserName(value);\n  };\n\n  const reset = () => {\n    setUserName('');\n    setUserNumber('');\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(addContact({ name: userName, number: userNumber }));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"userName\"\n          value={userName}\n          onChange={handleInputChange}\n          pattern=\"^[A-Za-z\\u0080-\\uFFFF ']+$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"userNumber\"\n          value={userNumber}\n          onChange={handleInputChange}\n          pattern=\"^(\\+?[0-9.\\(\\)\\-\\s]*)$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const ErrorMessage = styled.p`\n  margin-top: 20px;\n  font-weight: 900;\n  text-align: center;\n  font-size: 40px;\n  color: red;\n`;\n","import React from \"react\";\nimport { ErrorMessage } from \"./Error.styled\";\n\nconst Error = () => {\n    return <ErrorMessage>Ooops...something going wrong!</ErrorMessage>\n}\nexport default Error;","import styled from '@emotion/styled';\n\nexport const SearchLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 18px;\n  font-weight: 500;\n  margin-top: 40px;\n  margin-bottom: 30px;\n`;\n\nexport const SearchInput = styled.input`\n  margin-top: 4px;\n  padding: 8px 12px;\n  font-size: 18px;\n  line-height: 1.12;\n  font-style: italic;\n  font-weight: 300;\n  border-radius: 8px;\n  border: 2px solid #ef972c;\n  background-color: #fcfcd4;\n`;\n","import React from 'react';\nimport { SearchLabel, SearchInput } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getFilter } from '../../redux/contacts/selectors';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(getFilter);\n  const handleFilterChange = ({ target: { value } }) => {\n    dispatch(setFilter(value));\n  };\n  return (\n    <SearchLabel>\n      Find contacts by name\n      <SearchInput\n        type=\"text\"\n        name=\"filter\"\n        value={filterValue.filter}\n        onChange={handleFilterChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n    </SearchLabel>\n  );\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 8px;\n  align-items: baseline;\n  justify-content: space-between;\n`;\nexport const Contact = styled.p`\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nexport const Button = styled.button`\n  border-radius: 8px;\n  border: 2px solid #ef972c;\n  background-color: #ef972c;\n  cursor: pointer;\n  transition: transform 300ms linear, background-image 300ms linear 300ms,\n    border-color 300ms linear 300ms;\n  background-size: 200% auto;\n  background-image: linear-gradient(\n    30deg,\n    #f51212 0%,\n    #f09819 51%,\n    #f51212 100%\n  );\n  :hover,\n  :focus {\n    background-position: right center;\n    transform: scale(1.1);\n    border-color: #f51212;\n  }\n  :active {\n    transform: scale(0.95);\n  }\n`;\n","import React from 'react';\nimport { Item, Button, Contact } from './ContactListItem.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts, getFilter } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/contactsThunks';\n\nconst ContactListItem = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filterByName = filter => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const filtredContacts = filterByName(normalizedFilter);\n\n  return filtredContacts.map(({ id, name, number }) => {\n    return (\n      <Item key={id}>\n        <Contact>\n          {name}: {number}\n        </Contact>\n        <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n          Delete\n        </Button>\n      </Item>\n    );\n  });\n};\n\nexport default ContactListItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  max-height: 60vh;\n  margin-top: 12px;\n  padding: 8px 12px;\n  list-style: none;\n  line-height: 1.1;\n  background-color: #fff;\n  background-image: repeating-linear-gradient(\n    to bottom,\n    #e6f4f1,\n    #e6f4f1 20px,\n    #fcfcd4 20px,\n    #fcfcd4 50px\n  );\n  border-radius: 8px;\n  border: 2px solid #ef972c;\n  overflow-y: scroll;\n  @media screen and (min-width: 1024px) {\n    margin-top: 0;\n    min-height: 200px;\n  }\n`;\n","import React from 'react';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { List } from './ContactList.styled';\n\nconst ContactList = () => {\n  return (\n    <List>\n      <ContactListItem />\n    </List>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { ToastContainer } from 'react-toastify';\nimport {\n  getContacts,\n  getError,\n  getLoading,\n} from '../../redux/contacts/selectors';\nimport { fetchContacts } from '../../redux/contacts/contactsThunks';\nimport { Container, Title } from './Contacts.styled';\nimport ContactForm from 'components/ContactForm.jsx/ContactForm';\nimport Loader from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport Filter from 'components/Filter.jsx/Filter';\nimport ContactList from 'components/ContactList/ContactList';\n\nconst Contacts = () => {\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getLoading);\n  const error = useSelector(getError);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Container>\n      <Title>Contacts</Title>\n      <ContactForm />\n      {isLoading && !error && <Loader />}\n      {error && <Error />}\n      {contacts.length !== 0 && (\n        <>\n          <Filter />\n          {!isLoading && <ContactList />}\n        </>\n      )}\n      <ToastContainer />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["getFilter","state","filter","getContacts","contacts","items","getLoading","isLoading","getError","error","Container","styled","_templateObject","_taggedTemplateLiteral","Title","_templateObject2","Form","Label","Input","_templateObject3","Button","_templateObject4","_useState","useState","_useState2","_slicedToArray","userName","setUserName","_useState3","_useState4","userNumber","setUserNumber","dispatch","useDispatch","useSelector","handleInputChange","_ref","_ref$target","target","name","value","normalizedValue","toLowerCase","some","contact","number","toast","concat","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","_jsxs","onSubmit","evt","preventDefault","addContact","children","_jsx","type","onChange","pattern","title","required","ErrorMessage","SearchLabel","SearchInput","filterValue","setFilter","Item","Contact","filtredContacts","includes","filterByName","map","id","onClick","deleteContact","List","ContactListItem","useEffect","fetchContacts","ContactForm","Loader","Error","length","_Fragment","Filter","ContactList","ToastContainer"],"sourceRoot":""}